name: Docker Build

on: [push]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: docker

    - name: Checkout upstream repo 
      uses: actions/checkout@v4
      with:
        ref: master
        path: upstream
        submodules: recursive

    - name: Get upstream version
      id: version
      run: |
        telegram_bot_api_version=$(cd upstream && git rev-parse --short HEAD)
        tdlib_version=$(cd upstream/td && git rev-parse --short HEAD)
        version=$(grep -Po "project\(TelegramBotApi VERSION \K[\d.]+(?= LANGUAGES CXX\))" upstream/CMakeLists.txt)

        echo "version=$version" >> "$GITHUB_OUTPUT"
        echo "commit_sha=$telegram_bot_api_version-$tdlib_version" >> "$GITHUB_OUTPUT"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/idawnlight/telegram-bot-api
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.version.outputs.version }}
          type=raw,value=${{ steps.version.outputs.commit_sha }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
